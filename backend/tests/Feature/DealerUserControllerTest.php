<?php

namespace Tests\Feature;

use App\Models\Dealer;
use App\Models\DealerGroup;
use App\Models\DealerZone;
use App\Models\Role;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class DealerUserControllerTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->seed();
    }

    public function auth_user()
    {
        $dealers = Dealer::factory()->count(10)->create();
        $user = User::factory()->create([
            'dealer_id' => 1
        ]);
        $this->actingAs($user);
        return $dealers;
    }


    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_store_dealer_admin()
    {
        $this->auth_user();

        $group = DealerGroup::factory()->create();
        $zone = DealerZone::factory()->create();
        $dealer = Dealer::factory()->create(
            [
                'group_id'      => $group->id,
                'zone_id'       => $zone->id,
            ]
        );

        $formData = [
            'first_name'    => $this->faker->country . 'x',
            'last_name'     => $this->faker->sentence() . 'x',
            'email'         => $this->faker->email(),
            'password'      => 'password',
            'is_temp_password'    => 'temp_password',
            'dealer_id'           => $dealer->id
        ];
        $role = Role::where('slug', 'dealer')->firstOrFail();

        $response = $this->post("/api/v1/dealer/users", $formData);
        $response->dump();
        $response->assertStatus(200);
        $resData = json_decode($response->getContent());


        $this->assertDatabaseHas('users', [
            'first_name'          => $formData['first_name'],
            'last_name'           => $formData['last_name'],
            'email'               => $formData['email'],
            'dealer_id'           => $formData['dealer_id'],
        ]);

        $this->assertDatabaseHas('user_roles', [
            'user_id'          => $resData->data[0]->id,
            'role_id'          => $role->id,
        ]);
    }
}
