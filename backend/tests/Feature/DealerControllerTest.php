<?php

namespace Tests\Feature;

use App\Models\Dealer;
use App\Models\DealerGroup;
use App\Models\DealerZone;
use App\Models\Role;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class DealerControllerTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->seed();
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function auth_user()
    {
        $dealers = Dealer::factory()->count(10)->create();
        $user = User::factory()->create([
            'dealer_id' => 1
        ]);
        $this->actingAs($user);
        return $dealers;
    }

    public function test_store_dealer()
    {
        $this->auth_user();

        $group = DealerGroup::factory()->create();
        $zone = DealerZone::factory()->create();


        $formData = [
            'name'          => $this->faker->country,
            'description'   => $this->faker->sentence(),
            'code'          => $this->faker->unique()->slug,
            'status'        => $this->faker->boolean(),
            'email'         => $this->faker->email(),
            'group_id'      => $group->id,
            'zone_id'       => $zone->id,
        ];

        $response = $this->post('/api/v1/dealers', $formData);
        $response->assertStatus(200);
        $this->assertDatabaseHas('dealers', [
            'name'              => $formData['name'],
            'description'       => $formData['description'],
            'code'              => $formData['code'],
            'status'            => $formData['status'],
            'email'             => $formData['email'],
            'group_id'          => $formData['group_id'],
            'zone_id'           => $formData['zone_id'],
        ]);
    }

    public function test_update_dealer()
    {
        $this->auth_user();

        $group = DealerGroup::factory()->create();
        $zone = DealerZone::factory()->create();
        $dealer = Dealer::factory()->create(
            [
                'group_id'      => $group->id,
                'zone_id'       => $zone->id,
            ]
        );


        $formData = [
            'name'          => $this->faker->country . 'x',
            'description'   => $this->faker->sentence() . 'x',
            'code'          => $this->faker->unique()->slug . 'x',
            'status'        => $this->faker->boolean(),
            'email'         => $this->faker->email() . 'x',
            'group_id'      => $group->id,
            'zone_id'       => $zone->id,
        ];

        $response = $this->put("/api/v1/dealers/$dealer->id", $formData);
        $response->assertStatus(200);
        $this->assertDatabaseHas('dealers', [
            'name'              => $formData['name'],
            'description'       => $formData['description'],
            'code'              => $formData['code'],
            'status'            => $formData['status'],
            'email'             => $formData['email'],
            'group_id'          => $formData['group_id'],
            'zone_id'           => $formData['zone_id'],
        ]);
    }
}
